@import url('https://fonts.googleapis.com/css2?family=Red+Hat+Text:wght@700&display=swap');

// variables
// ---Color
$grayish-blue :hsl(237, 18%, 59%);
$soft-red: hsl(345, 95%, 68%);
$white: hsl(0, 0%, 100%);
$dark-desatured-blue: hsl(236, 21%, 26%);
$very-dark-blue: hsl(235, 16%, 14%);
$dark-black-blue: hsl(234, 17%, 12%);

//--breakpoints
$breakpoints:  (
    'small': (max-width: 480px),
    'medium': (max-width: 768px),
    'large': (max-width: 1200px),
    'extra-large': (min-width: 1201px)
);


// reset
* {
    padding: 0;
    margin: 0;
    list-style: none;
    box-sizing: border-box;
}

//mixins

@mixin respond-to ($breakpoint)  {
    $raw-query: map-get($breakpoints, $breakpoint );

    @if $raw-query{
        $query: if(
            type-of($raw-query) == 'string',
            unquote($raw-query),
            inspect($raw-query)
        );

        @media #{$query}  {
            @content;
        }
    } @else {
        @error 'No value found for `#{$breakpoint}`.'
            + 'Please make sure it is defined in `$breakpoints` map.';
    }
}

@mixin calendar {
    position: absolute;
    position: relative;
    border-radius: 12px;
    overflow: hidden;
    width: 100%;
    height: 70%;
    top: 0;
    box-shadow: 0px 13px 5px -3px  hsla(235, 18%, 12%, 0.841);

    .countdown {
        position: absolute;
        z-index: 15;
        top: 50%;
        left: 50%;
        transform: translate(-50%,-50%);
        mix-blend-mode: lighten;
    }

  .high {
    position: relative;
    height: 50%;
    background-color:hsl(236, 21%, 21%) ;
    border-bottom: 1px solid rgba(0, 0, 0, 0.162);
    &:before {
        content: "";
        position: absolute;
        height: 14px;
        width: 14px;
        background-color: $dark-black-blue;
        border-radius: 50%;
        bottom: -7px;
        left: -7px;
    }
    &:after {
        content: "";
        position: absolute;
        height: 14px;
        width: 14px;
        background-color: $dark-black-blue;
        border-radius: 50%;
        bottom: -7px;
        right: -7px;
    }
}
    .down {
    height: 50%;
    background-color: $dark-desatured-blue;
    }
}

@mixin countContainer {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    height: 150px;

    &__title{
        text-transform: uppercase;
        letter-spacing: 3px;
        color: $grayish-blue;
        font-size: 10px;
        margin-top: 15px;
    }

}

body{
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
    background: url('./images/bg-stars.svg');                  
    background-color: hsl(240, 14%, 18%);
    min-height: 100vh;
    font-family: 'Red Hat Text', sans-serif;

    &::after {
        content: "";
        z-index: -100;
        position: fixed;
        width: 100%;
        height: 40vh;
        background:  url('./images/pattern-hills.svg') center/contain no-repeat;
        background-size: 300%;
        background-position-y: 75px;
        background-position-x: -25px;
        bottom: -100px;
        left: 0;
    }
}


h1 {
    color: $white;
    letter-spacing: 10px;
    text-transform: uppercase;
    font-size: 20px;
    margin-bottom: 100px;
    text-align: center;
}
main {
    width: 95%;
    display: flex;
    align-items: center;
    justify-content: space-around;
    flex-direction: column;

}

.container {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    column-gap: 15px;
    width: 100%;
    max-width: 600px;
}

span {
    font-size: 4.5rem;
    font-weight: bold;
    color: $soft-red;

    @include respond-to('medium') {
        font-size: 2.2rem
    }
}

.days {
    @include countContainer;

}
.minutes {
    @include countContainer;

}
.hours {
    @include countContainer;

}
.seconds {
    @include countContainer;

}

.calendar {
    @include calendar;

}
ul{
    display: flex;
    column-gap: 35px;
    margin-top: 150px;
}

i{
    z-index: 100;
    color: $grayish-blue;
    font-size: 1.7rem;

    &:hover {
        color: $soft-red;
    }
}